{"version":3,"file":"static/js/234.968431ae.chunk.js","mappings":"6MAGIA,EAA6B,SAACC,GAC9B,MAAO,CACHC,OAAQD,EAAME,KAAKD,OAE3B,E,UCNA,GAAgB,QAAU,0B,UCA1B,EAAyB,2BAAzB,EAA6D,2BCW7D,MATA,SAAoBE,GAChB,IAAIC,EAAI,YAAAC,OAAeF,EAAMG,IAC7B,OACIC,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAcC,UAC1BH,EAAAA,EAAAA,KAACI,EAAAA,GAAO,CAACC,GAAIR,EAAMI,UAAW,SAAAK,GAAO,OAAIA,EAAQC,SAAWL,EAAgBA,CAAa,EAACC,SAAEP,EAAMY,QAG9G,ECTA,GAAgB,QAAU,yBAAyB,OAAS,wBAAwB,OAAS,yBCK7F,MAJA,SAAiBZ,GACb,OAAOI,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAOO,QAAQN,SAAEP,EAAMa,SAClD,E,uCCHA,EAA0B,gCAA1B,EAAuE,mC,UCIjEC,GAAcC,EAAAA,EAAAA,GAAiB,IAErC,SAASC,EAAehB,GACpB,OACII,EAAAA,EAAAA,KAAA,QAAMa,SAAUjB,EAAMkB,aAAaX,UAC/BY,EAAAA,EAAAA,MAAA,OAAKd,UAAWC,EAAeC,SAAA,EAC3BH,EAAAA,EAAAA,KAACgB,EAAAA,EAAK,CAACC,YAAY,qBAAqBT,KAAK,iBAAiBU,UAAWC,EAAAA,GAAUC,SAAU,CAACC,EAAAA,EAAUX,MAExGV,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAkBC,UAC9BH,EAAAA,EAAAA,KAAA,UAAAG,SAAQ,eAM5B,CAIA,MAFAS,GAAiBU,EAAAA,EAAAA,GAAU,CAACC,KAAM,wBAAjBD,CAA0CV,GCW3D,MA1BA,SAAiBhB,GAEb,IAAIH,EAAQG,EAAM4B,YAEdC,EAAkBhC,EAAMiC,QAAQC,KAAI,SAAAC,GAAC,OAAI5B,EAAAA,EAAAA,KAAC6B,EAAU,CAACrB,KAAMoB,EAAEpB,KAAiBT,GAAI6B,EAAE7B,IAAZ6B,EAAE7B,GAAgB,IAC1F+B,EAAmBrC,EAAMsC,SAASJ,KAAI,SAAAK,GAAC,OAAIhC,EAAAA,EAAAA,KAACiC,EAAO,CAACxB,QAASuB,EAAEvB,SAAcuB,EAAEjC,GAAK,IAQxF,OACIgB,EAAAA,EAAAA,MAAA,OAAKd,UAAWC,EAAOwB,QAAQvB,SAAA,EAC3BH,EAAAA,EAAAA,KAAA,OAAKC,UAAWC,EAAOgC,aAAa/B,SAC/BsB,KAELV,EAAAA,EAAAA,MAAA,OAAKd,UAAWC,EAAO6B,SAAS5B,SAAA,EAC5BH,EAAAA,EAAAA,KAAA,OAAAG,SAAM2B,KACN9B,EAAAA,EAAAA,KAACY,EAAc,CAACC,SAbR,SAACsB,GACjBvC,EAAMwC,YAAYD,EAASE,eAC/B,SAeJ,ECXA,GAAeC,EAAAA,EAAAA,KACXC,EAAAA,EAAAA,KAfkB,SAAC9C,GACnB,MAAO,CACH+B,YAAa/B,EAAM+B,YAE3B,IAEyB,SAACgB,GACtB,MAAO,CACHJ,YAAW,SAACC,GACRG,GAASC,EAAAA,EAAAA,GAAmBJ,GAChC,EAER,KTTgC,SAACK,GAS7B,OAFqCH,EAAAA,EAAAA,IAAQ/C,EAAR+C,EANrC,SAA2B3C,GACvB,OAAKA,EAAMF,QAEJM,EAAAA,EAAAA,KAAC0C,GAASC,EAAAA,EAAAA,GAAA,GAAK/C,KAFII,EAAAA,EAAAA,KAAC4C,EAAAA,GAAQ,CAACvC,GAAG,UAG3C,GAKJ,GSCA,CAGEwC,E","sources":["hoc/withAuthRedirect.jsx","webpack://first-app/./src/components/Dialogs/Dialogs.module.css?1b2e","webpack://first-app/./src/components/Dialogs/DialogItem/DialogItem.module.css?beb9","components/Dialogs/DialogItem/DialogItem.jsx","webpack://first-app/./src/components/Dialogs/Message/Message.module.css?72d0","components/Dialogs/Message/Message.jsx","webpack://first-app/./src/components/Dialogs/AddMessageForm/AddMessageForm.module.css?2bba","components/Dialogs/AddMessageForm/AddMessageForm.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"sourcesContent":["import { connect } from \"react-redux\"\r\nimport { Navigate } from \"react-router-dom\"\r\n\r\nlet mapStateToPropsForRedirect = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth\r\n    }\r\n}\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    function RedirectComponent(props) {\r\n        if (!props.isAuth) return <Navigate to='/login' />\r\n\r\n        return <Component {...props} />\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Dialogs_dialogs__5+hpR\"};","// extracted by mini-css-extract-plugin\nexport default {\"dialog\":\"DialogItem_dialog__OXYhV\",\"active\":\"DialogItem_active__xEegn\"};","import { NavLink } from 'react-router-dom';\r\nimport styles from './DialogItem.module.css';\r\n\r\nfunction DialogItem(props){\r\n    let path = `/dialogs/${props.id}`;\r\n    return(\r\n        <div className={styles.dialog}>\r\n            <NavLink to={path} className={navData => navData.isActive ? styles.active : styles.dialog}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","// extracted by mini-css-extract-plugin\nexport default {\"dialogs\":\"Message_dialogs__W-7vL\",\"dialog\":\"Message_dialog__XfMyw\",\"active\":\"Message_active__YjK6D\"};","import styles from './Message.module.css';\r\n\r\nfunction Message(props){\r\n    return <div className={styles.message}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","// extracted by mini-css-extract-plugin\nexport default {\"sendBox\":\"AddMessageForm_sendBox__6gKpA\",\"buttonArea\":\"AddMessageForm_buttonArea__tGfri\"};","import { Field, reduxForm } from \"redux-form\";\r\nimport { maxLengthCreator, required } from \"../../../utils/validators/validators\";\r\nimport styles from './AddMessageForm.module.css'\r\nimport { Textarea } from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nfunction AddMessageForm(props) {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div className={styles.sendBox}>\r\n                <Field placeholder=\"Enter your message\" name=\"newMessageText\" component={Textarea} validate={[required, maxLength50]}/>\r\n                {/* <textarea placeholder=\"Enter your message\" onChange={onMessageChange} value={state.newMessageText}></textarea> */}\r\n                <div className={styles.buttonArea}>\r\n                    <button>Send</button>\r\n                </div>\r\n            </div>\r\n        </form>\r\n\r\n    )\r\n}\r\n\r\nAddMessageForm = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\r\n\r\nexport default AddMessageForm;","import styles from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport React from 'react';\r\nimport AddMessageForm from './AddMessageForm/AddMessageForm';\r\n\r\n\r\nfunction Dialogs(props) {\r\n\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id} />)\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id}/>)\r\n    \r\n    let addNewMessage = (formData) => {\r\n        props.sendMessage(formData.newMessageText)\r\n    }\r\n\r\n    // if(!props.isAuth) return <Navigate to='/login' />\r\n\r\n    return (\r\n        <div className={styles.dialogs}>\r\n            <div className={styles.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={styles.messages}>\r\n                <div>{messagesElements}</div>\r\n                <AddMessageForm onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import { compose } from 'redux';\r\nimport { withAuthRedirect } from '../../hoc/withAuthRedirect';\r\nimport { sendMessageCreator } from '../../redux/dialogs-reducer';\r\nimport Dialogs from './Dialogs';\r\nimport { connect } from 'react-redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage(newMessageText) {\r\n            dispatch(sendMessageCreator(newMessageText))\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs)\r\n\r\n\r\n\r\n//previous code\r\n// function DialogsContainer(props) {\r\n\r\n\r\n//     return (\r\n//         <StoreContext.Consumer>\r\n//             {store => {\r\n//                 let state = store.getState().dialogsPage;\r\n\r\n//                 let sendMessage = () => {\r\n//                     store.dispatch(sendMessageCreator())\r\n//                 }\r\n//                 let onMessageChange = (text) => {\r\n//                     store.dispatch(updateMessageTextCreator(text))\r\n//                 }\r\n//                 return <Dialogs sendMessage={sendMessage} updateMessageText={onMessageChange} dialogsPage={state} />\r\n//             }}\r\n//         </StoreContext.Consumer>\r\n//     )\r\n// }"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","props","path","concat","id","_jsx","className","styles","children","NavLink","to","navData","isActive","name","message","maxLength50","maxLengthCreator","AddMessageForm","onSubmit","handleSubmit","_jsxs","Field","placeholder","component","Textarea","validate","required","reduxForm","form","dialogsPage","dialogsElements","dialogs","map","d","DialogItem","messagesElements","messages","m","Message","dialogsItems","formData","sendMessage","newMessageText","compose","connect","dispatch","sendMessageCreator","Component","_objectSpread","Navigate","Dialogs"],"sourceRoot":""}